import React, { useRef } from 'react';
import WordButton from '../components/WordButton.js';
import Canvas from '../components/draw/Canvas.js';
import Navigation from '../components/Navigation.js';
import ChildImg from '../assets/child.svg';
import StoryCard from '../components/draw/StoryCard';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';

function DrawingPage() {
    const navigate = useNavigate();
    const stageRef = useRef(null);

    // SVG Î≥ÄÌôò Î∞è Îã§Ïö¥Î°úÎìú Ìï®Ïàò
    const exportToSVGAndUpload = async () => {
        if (!stageRef.current) return;

        const stage = stageRef.current;
        const svgString = `
            <svg xmlns="http://www.w3.org/2000/svg" width="${stage.width()}" height="${stage.height()}">
                ${stage
                    .find('Line')
                    .map(line => {
                        const points = line.attrs.points.join(' ');
                        return `<polyline points="${points}" fill="none" stroke="black" stroke-width="2" />`;
                    })
                    .join('\n')}
            </svg>
        `;

        console.log('üîç ÏÉùÏÑ±Îêú SVG ÏΩîÎìú:', svgString); // ÎîîÎ≤ÑÍπÖÏö© ÏΩòÏÜî Ï∂úÎ†•

        //SVG Îç∞Ïù¥ÌÑ∞Î•º BlobÏúºÎ°ú Î≥ÄÌôò
        const blob = new Blob([svgString], { type: 'image/svg+xml' });
        const file = new File([blob], 'drawing.svg', { type: 'image/svg+xml' });

        //FormData ÏÉùÏÑ± ÌõÑ ÌååÏùº Ï∂îÍ∞Ä
        const formData = new FormData();
        formData.append('file', file);

        //API ÏöîÏ≤≠ (cutIdÎäî ÏòàÏãúÎ°ú 12 ÏÇ¨Ïö©, Ïã§Ï†ú Í∞íÏúºÎ°ú Î≥ÄÍ≤Ω ÌïÑÏöî)
        const cutId = 1; // Ïã§Ï†ú cutId Í∞íÏúºÎ°ú Î≥ÄÍ≤Ω ÌïÑÏöî
        try {
            const response = await axios.patch(`http://localhost:8080/cuts/save-final/${cutId}`, formData, {
                headers: { 'Content-Type': 'multipart/form-data' },
            });
            console.log('ÏÑúÎ≤Ñ ÏùëÎãµ:', response.data);
            //alert('SVG ÌååÏùºÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú ÏóÖÎ°úÎìúÎêòÏóàÏäµÎãàÎã§!');
        } catch (error) {
            console.error('ÏóÖÎ°úÎìú Ïã§Ìå®:', error);
            //alert('ÏóÖÎ°úÎìúÏóê Ïã§Ìå®ÌñàÏäµÎãàÎã§.');
        }
    };

    const handleTimeOut = () => {
        exportToSVGAndUpload();
        navigate('/session/draw-end');
    };

    return (
        <div className="h-screen bg-light-cream-yellow">
            <div className="w-full mb-5">
                <Navigation stage="drawing" onTimeOut={handleTimeOut} />
            </div>

            <div className="flex gap-4 p-5">
                <div className="w-72 mr-5">
                    <div className="rounded-lg overflow-hidden mb-4">
                        <img src={ChildImg} alt="Ï∞∏Í≥† Ïù¥ÎØ∏ÏßÄ" className="w-full" />
                        <WordButton color="bg-dark-yellow w-full mt-5" size="md">
                            ÏßÄÎÇú Ïù¥ÏïºÍ∏∞ Ï†ÑÏ≤¥ Î≥¥Í∏∞
                        </WordButton>

                        <div className="relative w-full h-100 p-6 flex flex-col items-center mt-5">
                            <StoryCard />
                        </div>
                    </div>
                </div>
                <Canvas stageRef={stageRef} />
            </div>
            <button
                onClick={exportToSVGAndUpload}
                className="mt-4 px-4 py-2 bg-blue-500 text-white rounded-lg shadow-md hover:bg-blue-600 transition"
            >
                SVGÎ°ú ÎÇ¥Î≥¥ÎÇ¥Í∏∞
            </button>
        </div>
    );
}

export default DrawingPage;
